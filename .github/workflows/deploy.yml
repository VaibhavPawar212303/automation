name: Deploy to GCP VM

on:
  push:
    branches:
      - main  # Trigger the workflow when changes are pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up SSH access to the GCP VM
      - name: Set up SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan ${{ secrets.GCP_VM_IP }} >> ~/.ssh/known_hosts

      # Step 3: Test SSH Connection
      - name: Test SSH Connection
        env:
          GCP_VM_IP: ${{ secrets.GCP_VM_IP }}
        run: |
          echo "Testing SSH connection..."
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} pawarvaibhav.vppv@$GCP_VM_IP exit
          echo "SSH connection successful."

      # Step 4: Deploy application on GCP VM
      - name: Deploy to GCP VM
        env:
          GCP_VM_IP: ${{ secrets.GCP_VM_IP }}
        run: |
          echo "Starting deployment to GCP VM..."
          ssh -t -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} pawarvaibhav.vppv@$GCP_VM_IP <<EOF
          set -e
          echo "Navigating to application directory..."
          cd /path/to/your/repo || { echo "Directory does not exist. Exiting."; exit 1; }

          echo "Pulling latest changes from Git..."
          git pull origin main || { echo "Git pull failed. Exiting."; exit 1; }

          echo "Rebuilding Docker containers..."
          docker-compose down || { echo "Failed to stop Docker containers."; }
          docker-compose up -d --build || { echo "Docker rebuild failed. Exiting."; exit 1; }

          echo "Deployment complete!"
          EOF

      # Step 5: Clean up private key
      - name: Clean up
        run: |
          echo "Removing temporary SSH private key..."
          rm -f private_key.pem
